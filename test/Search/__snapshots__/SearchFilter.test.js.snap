// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchFilter Component Snapshot test with default props sorted by Rating 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchFilter
    ratingClick={[MockFunction]}
    releaseDate={false}
    releaseDateClick={[MockFunction]}
    resultCount={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="searchFilterBar"
        style={
          Object {
            "padding": "5px 15px",
          }
        }
      >
        2
         movies found
        <div
          className="float-right"
        >
          <label
            className="mr-3"
          >
            Sort by
          </label>
          <Button
            className="btn btn-sm mr-3 btn-light"
            clickHandler={[MockFunction]}
            label="Release Date"
          />
          <Button
            className="btn btn-sm btn-dark"
            clickHandler={[MockFunction]}
            label="Rating"
          />
        </div>
      </div>,
      "className": "card",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          2,
          " movies found",
          <div
            className="float-right"
          >
            <label
              className="mr-3"
            >
              Sort by
            </label>
            <Button
              className="btn btn-sm mr-3 btn-light"
              clickHandler={[MockFunction]}
              label="Release Date"
            />
            <Button
              className="btn btn-sm btn-dark"
              clickHandler={[MockFunction]}
              label="Rating"
            />
          </div>,
        ],
        "className": "searchFilterBar",
        "style": Object {
          "padding": "5px 15px",
        },
      },
      "ref": null,
      "rendered": Array [
        2,
        " movies found",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="mr-3"
              >
                Sort by
              </label>,
              <Button
                className="btn btn-sm mr-3 btn-light"
                clickHandler={[MockFunction]}
                label="Release Date"
              />,
              <Button
                className="btn btn-sm btn-dark"
                clickHandler={[MockFunction]}
                label="Rating"
              />,
            ],
            "className": "float-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sort by",
                "className": "mr-3",
              },
              "ref": null,
              "rendered": "Sort by",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "btn btn-sm mr-3 btn-light",
                "clickHandler": [MockFunction],
                "label": "Release Date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "btn btn-sm btn-dark",
                "clickHandler": [MockFunction],
                "label": "Rating",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="searchFilterBar"
          style={
            Object {
              "padding": "5px 15px",
            }
          }
        >
          2
           movies found
          <div
            className="float-right"
          >
            <label
              className="mr-3"
            >
              Sort by
            </label>
            <Button
              className="btn btn-sm mr-3 btn-light"
              clickHandler={[MockFunction]}
              label="Release Date"
            />
            <Button
              className="btn btn-sm btn-dark"
              clickHandler={[MockFunction]}
              label="Rating"
            />
          </div>
        </div>,
        "className": "card",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            2,
            " movies found",
            <div
              className="float-right"
            >
              <label
                className="mr-3"
              >
                Sort by
              </label>
              <Button
                className="btn btn-sm mr-3 btn-light"
                clickHandler={[MockFunction]}
                label="Release Date"
              />
              <Button
                className="btn btn-sm btn-dark"
                clickHandler={[MockFunction]}
                label="Rating"
              />
            </div>,
          ],
          "className": "searchFilterBar",
          "style": Object {
            "padding": "5px 15px",
          },
        },
        "ref": null,
        "rendered": Array [
          2,
          " movies found",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="mr-3"
                >
                  Sort by
                </label>,
                <Button
                  className="btn btn-sm mr-3 btn-light"
                  clickHandler={[MockFunction]}
                  label="Release Date"
                />,
                <Button
                  className="btn btn-sm btn-dark"
                  clickHandler={[MockFunction]}
                  label="Rating"
                />,
              ],
              "className": "float-right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sort by",
                  "className": "mr-3",
                },
                "ref": null,
                "rendered": "Sort by",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "btn btn-sm mr-3 btn-light",
                  "clickHandler": [MockFunction],
                  "label": "Release Date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "btn btn-sm btn-dark",
                  "clickHandler": [MockFunction],
                  "label": "Rating",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SearchFilter Component Snapshot test with default props sorted by Release date 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchFilter
    ratingClick={[MockFunction]}
    releaseDate={true}
    releaseDateClick={[MockFunction]}
    resultCount={3}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="searchFilterBar"
        style={
          Object {
            "padding": "5px 15px",
          }
        }
      >
        3
         movies found
        <div
          className="float-right"
        >
          <label
            className="mr-3"
          >
            Sort by
          </label>
          <Button
            className="btn btn-sm mr-3 btn-dark"
            clickHandler={[MockFunction]}
            label="Release Date"
          />
          <Button
            className="btn btn-sm btn-light"
            clickHandler={[MockFunction]}
            label="Rating"
          />
        </div>
      </div>,
      "className": "card",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          3,
          " movies found",
          <div
            className="float-right"
          >
            <label
              className="mr-3"
            >
              Sort by
            </label>
            <Button
              className="btn btn-sm mr-3 btn-dark"
              clickHandler={[MockFunction]}
              label="Release Date"
            />
            <Button
              className="btn btn-sm btn-light"
              clickHandler={[MockFunction]}
              label="Rating"
            />
          </div>,
        ],
        "className": "searchFilterBar",
        "style": Object {
          "padding": "5px 15px",
        },
      },
      "ref": null,
      "rendered": Array [
        3,
        " movies found",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="mr-3"
              >
                Sort by
              </label>,
              <Button
                className="btn btn-sm mr-3 btn-dark"
                clickHandler={[MockFunction]}
                label="Release Date"
              />,
              <Button
                className="btn btn-sm btn-light"
                clickHandler={[MockFunction]}
                label="Rating"
              />,
            ],
            "className": "float-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sort by",
                "className": "mr-3",
              },
              "ref": null,
              "rendered": "Sort by",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "btn btn-sm mr-3 btn-dark",
                "clickHandler": [MockFunction],
                "label": "Release Date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "btn btn-sm btn-light",
                "clickHandler": [MockFunction],
                "label": "Rating",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="searchFilterBar"
          style={
            Object {
              "padding": "5px 15px",
            }
          }
        >
          3
           movies found
          <div
            className="float-right"
          >
            <label
              className="mr-3"
            >
              Sort by
            </label>
            <Button
              className="btn btn-sm mr-3 btn-dark"
              clickHandler={[MockFunction]}
              label="Release Date"
            />
            <Button
              className="btn btn-sm btn-light"
              clickHandler={[MockFunction]}
              label="Rating"
            />
          </div>
        </div>,
        "className": "card",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            3,
            " movies found",
            <div
              className="float-right"
            >
              <label
                className="mr-3"
              >
                Sort by
              </label>
              <Button
                className="btn btn-sm mr-3 btn-dark"
                clickHandler={[MockFunction]}
                label="Release Date"
              />
              <Button
                className="btn btn-sm btn-light"
                clickHandler={[MockFunction]}
                label="Rating"
              />
            </div>,
          ],
          "className": "searchFilterBar",
          "style": Object {
            "padding": "5px 15px",
          },
        },
        "ref": null,
        "rendered": Array [
          3,
          " movies found",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="mr-3"
                >
                  Sort by
                </label>,
                <Button
                  className="btn btn-sm mr-3 btn-dark"
                  clickHandler={[MockFunction]}
                  label="Release Date"
                />,
                <Button
                  className="btn btn-sm btn-light"
                  clickHandler={[MockFunction]}
                  label="Rating"
                />,
              ],
              "className": "float-right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sort by",
                  "className": "mr-3",
                },
                "ref": null,
                "rendered": "Sort by",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "btn btn-sm mr-3 btn-dark",
                  "clickHandler": [MockFunction],
                  "label": "Release Date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "btn btn-sm btn-light",
                  "clickHandler": [MockFunction],
                  "label": "Rating",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
